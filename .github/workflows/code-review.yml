name: Gemini PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    runs-on: ubuntu-latest

    env:
      GEMINI_API_URL: "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent"
      # Google Cloud から払い出した API キーを GitHub リポジトリの Secrets に設定しておくにゃ
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    steps:
      # 1. PR の差分を取得
      - name: Checkout target branch
        uses: actions/checkout@v4

      - name: Generate diff file
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }}...${{ github.sha }} > pr.diff

      # 2. Gemini にレビューを依頼
      - name: Ask Gemini for review
        id: gemini
        run: |
          DIFF_CONTENT=$(cat pr.diff | jq -Rs '.')
          PROMPT=$(jq -cn --arg diff "$DIFF_CONTENT" '{
            contents: [{
              parts: [{
                text: "あなたは熟練のコードレビュアーです。次の Git diff をレビューし、変更点ごとに指摘・改善提案・ベストプラクティスを日本語で出力してください。\
\n\n" + $diff
              }]
            }]
          }')
          RESPONSE=$(curl -s -X POST "${GEMINI_API_URL}?key=${GEMINI_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "$PROMPT")
          echo "response=$RESPONSE" >> "$GITHUB_OUTPUT"

      # 3. レビューコメントを PR に投稿
      - name: Post comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ### :sparkles: Gemini Code Assistant Review
            ```text
            ${{ fromJSON(steps.gemini.outputs.response).candidates[0].content.parts[0].text }}
            ```